{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","isFavorites","useState","hoveredUserId","setHoveredUserId","saved","localStorage","getItem","JSON","parse","favoriteUsers","setFavoriteUsers","brazil","setBrazil","australia","setAustralia","canada","setCanada","germany","setGermany","spain","setSpain","useEffect","setItem","stringify","handleCheckBoxClick","country","console","log","handleMouseLeave","filter","user","location","map","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","find","favoriteUser","login","uuid","IconButton","onClick","currentUser","copyOfFavoriteUsers","i","length","push","handleIconClick","Home","Content","Header","setUsers","setIsLoading","fetchUsers","a","axios","get","response","data","results","usePeopleFetch","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","url","href","substring","setValue","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","component","Link","to","replace","Favorites","fetchFavoriteUsers","fetchedFavoriteUsers","AppRouter","basename","process","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.166c1943.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    // console.log(label);\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst UserList = ({ users, isLoading, isFavorites }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [favoriteUsers, setFavoriteUsers] = useState(() => {\r\n      const saved = localStorage.getItem(\"favoriteUsers\");\r\n      const fetchedFavoriteUsers = JSON.parse(saved);\r\n      return fetchedFavoriteUsers || [];\r\n  });\r\n\r\n  const [brazil, setBrazil] = useState(false);\r\n  const [australia, setAustralia] = useState(false);\r\n  const [canada, setCanada] = useState(false);\r\n  const [germany, setGermany] = useState(false);\r\n  const [spain, setSpain] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favoriteUsers\", JSON.stringify(favoriteUsers));\r\n  }, [favoriteUsers]);\r\n\r\n  /**\r\n   * This function determines which users to display\r\n   * based on the tab the user is in. If it is the \"Favorites\"\r\n   * tab it will return only favorite users, else it will\r\n   * return all users.\r\n   * \r\n   * @returns {Array} Array of user objects\r\n   */\r\n  const currentUsersToDisplay = () => {\r\n      if (isFavorites)\r\n      {\r\n        return favoriteUsers;\r\n      }\r\n\r\n      return users;\r\n  }\r\n\r\n  /**\r\n   * This function will handle which country filter\r\n   * was chosen and update the value of that country.\r\n   * \r\n   * @param {String} country - The country that was selected\r\n   */\r\n  const handleCheckBoxClick = (country) => {\r\n    if (country === \"BR\")\r\n    {\r\n      setBrazil(!brazil);\r\n    }\r\n    else if (country === \"AU\")\r\n    {\r\n      setAustralia(!australia);\r\n    }\r\n    else if (country === \"CA\")\r\n    {\r\n      setCanada(!canada);\r\n    }\r\n    else if (country === \"DE\"){\r\n      setGermany(!germany);\r\n    }\r\n    else {\r\n      \r\n      console.log(\"spain = \" + spain)\r\n      setSpain(!spain);\r\n    }\r\n  }\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  /**\r\n   * This function will handle the click on the heart icon.\r\n   * It will check if the user is already in favorites array,\r\n   * if it is, it will remove it from favorites, else, it will\r\n   * add the user to favorites.\r\n   *  \r\n   * @param {Object} user - The current user that was clicked on \r\n   */\r\n\r\n  const handleIconClick = (user) => {\r\n    var currentUser = favoriteUsers.find(favoriteUser => favoriteUser.login.uuid === user.login.uuid);\r\n\r\n    if (currentUser)\r\n    {\r\n      var copyOfFavoriteUsers = [];\r\n      for (let i = 0; i < favoriteUsers.length; i++)\r\n      {\r\n        if (favoriteUsers[i].login.uuid != currentUser.login.uuid)\r\n        {\r\n          copyOfFavoriteUsers.push(favoriteUsers[i]);\r\n        }\r\n      }\r\n      setFavoriteUsers(copyOfFavoriteUsers);\r\n    }\r\n    else{\r\n      setFavoriteUsers(favoriteUsers => [...favoriteUsers, user])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={handleCheckBoxClick} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={handleCheckBoxClick} />\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={handleCheckBoxClick} />\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={handleCheckBoxClick} />\r\n        <CheckBox value=\"ESP\" label=\"Spain\" onChange={handleCheckBoxClick} />\r\n      </S.Filters>\r\n      <S.List>\r\n        {currentUsersToDisplay().filter(user => (user.location.country === \"Brazil\" && brazil) ||\r\n                                                (user.location.country === \"Australia\" && australia) ||\r\n                                                (user.location.country === \"Canada\" && canada) ||\r\n                                                (user.location.country === \"Germany\" && germany) ||\r\n                                                (user.location.country === \"Spain\" && spain) ||\r\n                                                (!brazil && !australia && !canada && !germany && !spain))\r\n                                .map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || favoriteUsers.find(favoriteUser => favoriteUser.login.uuid === user.login.uuid)}>\r\n                <IconButton onClick={() => handleIconClick(user)}>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} isFavorites={false}/>\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\"\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(() => {\r\n    let url = location.href;\r\n    let tabName = \"/favorites\"\r\n    let path = url.substring(url.length - tabName.length);\r\n\r\n    if (path === \"/favorites\")\r\n    {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" component={Link} to=\"/\" replace index={0} />\r\n        <Tab label=\"Favorites\" component={Link} to=\"/favorites\"  replace index={1} />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React,  { useState, useEffect } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport * as S from \"./style\";\r\n\r\nconst Favorites = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect (() => {\r\n        setUsers(fetchFavoriteUsers)\r\n    }, [])\r\n\r\n\r\n    /**\r\n     * This function fetches all favorite users\r\n     * from local storage.\r\n     * \r\n     * @returns {Array} Array of user objects\r\n     */\r\n    const fetchFavoriteUsers = () => {\r\n        const saved = localStorage.getItem(\"favoriteUsers\");\r\n        const fetchedFavoriteUsers = JSON.parse(saved);\r\n        setIsLoading(false);\r\n        return fetchedFavoriteUsers || [];\r\n    }\r\n \r\n    return (\r\n        <S.Home>\r\n        <S.Content>\r\n            <S.Header>\r\n            <Text size=\"64px\" bold>\r\n                PplFinder Favorites\r\n            </Text>\r\n            </S.Header>\r\n            <UserList users={users} isLoading={isLoading} isFavorites={true} />\r\n        </S.Content>\r\n        </S.Home>\r\n    );\r\n};\r\n\r\nexport default Favorites;","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport Favorites from \"pages/Favorites/Favorites\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}